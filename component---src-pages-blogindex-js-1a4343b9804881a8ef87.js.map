{"version":3,"sources":["webpack:///./src/components/bio.js","webpack:///./src/components/bloglayout.js","webpack:///./src/pages/blogindex.js"],"names":["data","useStaticQuery","author","social","style","display","marginBottom","rhythm","fixed","alt","marginRight","minWidth","borderRadius","imgStyle","href","twitter","location","title","children","header","scale","marginTop","boxShadow","color","to","fontFamily","marginLeft","maxWidth","padding","Date","pageQuery","siteTitle","posts","node","key","slug","dangerouslySetInnerHTML","__html","excerpt"],"mappings":"6FAAA,sEAqEA,IAxDY,WACV,IAAMA,EAAOC,yBAAb,cADgB,EAwBWD,OAxBX,aAwBRE,EAxBQ,SAwBAC,EAxBA,SAyBhB,OACE,yBACEC,MAAO,CACLC,QADK,OAELC,aAAcC,YAAO,OAGvB,uBACEC,MAAOR,yBADT,MAEES,IAAKP,EAFP,KAGEE,MAAO,CACLM,YAAaH,YAAO,IACpBD,aAFK,EAGLK,SAHK,GAILC,aAAa,QAEfC,SAAU,CACRD,aAAa,SAGjB,yCACa,gCAASV,EADtB,UAC6CA,EAD7C,YAGE,uBAAGY,KAAI,uBAAyBX,EAAOY,SAvB7C,wC,gJC+BF,EAhEmB,SAAC,GAAmC,IAErD,EAFoBC,EAAgC,EAAhCA,SAAUC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SA4CrC,OAvCEC,EAJF,MAGIH,WAEA,wBACEZ,MAAK,iBACAgB,YADA,MAEHd,aAAcC,YAFX,KAGHc,UAAW,KAGb,0BACEjB,MAAO,CACLkB,UADK,OAELC,MAAM,WAERC,GAAE,KAbRL,IAqBE,wBACEf,MAAO,CACLqB,WADK,yBAELJ,UAAW,IAGb,0BACEjB,MAAO,CACLkB,UADK,OAELC,MAAM,WAERC,GAAE,KAZRL,IAoBA,yBACEf,MAAO,CACLsB,WADK,OAELhB,YAFK,OAGLiB,SAAUpB,YAHL,IAILqB,QAAYrB,YAAL,SAAoBA,YAAO,EAAD,KAGnC,gCARF,GASE,8BATF,GAUE,sCACK,IAAIsB,MADT,iCAGE,uBAAGf,KAAK,4BAdd,a,YCDWgB,GAFb,UAtCkB,SAAC,GAAwB,IAAtB9B,EAAqB,EAArBA,KAAMgB,EAAe,EAAfA,SACnBe,EAAY/B,oBAAlB,MACMgC,EAAQhC,oBAAd,MAEA,OACE,qBAAYgB,SAAZ,EAAgCC,MAAOc,GACrC,uBAAKd,MAAM,cACX,sBAFF,MAGGe,EAAA,KAAU,YAAe,IAAZC,EAAW,EAAXA,KACNhB,EAAQgB,qBAA0BA,SAAxC,KACA,OACE,6BAASC,IAAKD,SAAYE,MACxB,gCACE,wBACE/B,MAAO,CACLE,aAAcC,YAAO,EAAD,KAGtB,0BAAMH,MAAO,CAAEkB,UAAU,QAAWE,GAAIS,SAAYE,MANxD,IAUE,+BAAQF,cAXZ,OAaE,iCACE,uBACEG,wBAAyB,CACvBC,OAAQJ,2BAAgCA,EAAKK,kBAaxD","file":"component---src-pages-blogindex-js-1a4343b9804881a8ef87.js","sourcesContent":["/**\n * Bio component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport Image from \"gatsby-image\"\n\nimport { rhythm } from \"../utils/typography\"\n\nconst Bio = () => {\n  const data = useStaticQuery(graphql`\n    query BioQuery {\n      avatar: file(absolutePath: { regex: \"/profile-pic.jpg/\" }) {\n        childImageSharp {\n          fixed(width: 50, height: 50) {\n            ...GatsbyImageSharpFixed\n          }\n        }\n      }\n      site {\n        siteMetadata {\n          author {\n            name\n            summary\n          }\n          social {\n            twitter\n          }\n        }\n      }\n    }\n  `)\n\n  const { author, social } = data.site.siteMetadata\n  return (\n    <div\n      style={{\n        display: `flex`,\n        marginBottom: rhythm(2.5),\n      }}\n    >\n      <Image\n        fixed={data.avatar.childImageSharp.fixed}\n        alt={author.name}\n        style={{\n          marginRight: rhythm(1 / 2),\n          marginBottom: 0,\n          minWidth: 50,\n          borderRadius: `100%`,\n        }}\n        imgStyle={{\n          borderRadius: `50%`,\n        }}\n      />\n      <p>\n        Written by <strong>{author.name}</strong> {author.summary}\n        {` `}\n        <a href={`https://twitter.com/${social.twitter}`}>\n          You should follow him on Twitter\n        </a>\n      </p>\n    </div>\n  )\n}\n\nexport default Bio\n","import React from \"react\"\nimport { Link } from \"gatsby\"\n\nimport { rhythm, scale } from \"../utils/typography\"\n\nconst BlogLayout = ({ location, title, children }) => {\n  const rootPath = `${__PATH_PREFIX__}/`\n  let header\n\n  if (location.pathname === rootPath) {\n    header = (\n      <h1\n        style={{\n          ...scale(1.5),\n          marginBottom: rhythm(1.5),\n          marginTop: 0,\n        }}\n      >\n        <Link\n          style={{\n            boxShadow: `none`,\n            color: `inherit`,\n          }}\n          to={`/`}\n        >\n          {title}\n        </Link>\n      </h1>\n    )\n  } else {\n    header = (\n      <h3\n        style={{\n          fontFamily: `Montserrat, sans-serif`,\n          marginTop: 0,\n        }}\n      >\n        <Link\n          style={{\n            boxShadow: `none`,\n            color: `inherit`,\n          }}\n          to={`/`}\n        >\n          {title}\n        </Link>\n      </h3>\n    )\n  }\n  return (\n    <div\n      style={{\n        marginLeft: `auto`,\n        marginRight: `auto`,\n        maxWidth: rhythm(24),\n        padding: `${rhythm(1.5)} ${rhythm(3 / 4)}`,\n      }}\n    >\n      <header>{header}</header>\n      <main>{children}</main>\n      <footer>\n        Â© {new Date().getFullYear()}, Built with\n        {` `}\n        <a href=\"https://www.gatsbyjs.org\">Gatsby</a>\n      </footer>\n    </div>\n  )\n}\n\nexport default BlogLayout\n","import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Bio from \"../components/bio\"\nimport BlogLayout from \"../components/bloglayout\"\nimport SEO from \"../components/seo\"\nimport { rhythm } from \"../utils/typography\"\n\nconst BlogIndex = ({ data, location }) => {\n  const siteTitle = data.site.siteMetadata.title\n  const posts = data.allMarkdownRemark.edges\n\n  return (\n    <BlogLayout location={location} title={siteTitle}>\n      <SEO title=\"All posts\" />\n      <Bio />\n      {posts.map(({ node }) => {\n        const title = node.frontmatter.title || node.fields.slug\n        return (\n          <article key={node.fields.slug}>\n            <header>\n              <h3\n                style={{\n                  marginBottom: rhythm(1 / 4),\n                }}\n              >\n                <Link style={{ boxShadow: `none` }} to={node.fields.slug}>\n                  {title}\n                </Link>\n              </h3>\n              <small>{node.frontmatter.date}</small>\n            </header>\n            <section>\n              <p\n                dangerouslySetInnerHTML={{\n                  __html: node.frontmatter.description || node.excerpt,\n                }}\n              />\n            </section>\n          </article>\n        )\n      })}\n    </BlogLayout>\n  )\n}\n\nexport default BlogIndex\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            description\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}